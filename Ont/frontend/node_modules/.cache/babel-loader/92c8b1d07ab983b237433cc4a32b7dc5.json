{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChannelConnection = void 0;\n\nvar channel_1 = require(\"../channel\");\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar connection_1 = __importDefault(require(\"./connection\"));\n\nvar bolt_1 = __importDefault(require(\"../bolt\"));\n\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @return {Connection} - new connection.\n */\n\nfunction createChannelConnection(address, config, errorHandler, log, serversideRouting, createChannel) {\n  if (serversideRouting === void 0) {\n    serversideRouting = null;\n  }\n\n  if (createChannel === void 0) {\n    createChannel = function (channelConfig) {\n      return new channel_1.Channel(channelConfig);\n    };\n  }\n\n  var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode());\n  var channel = createChannel(channelConfig);\n  return bolt_1.default.handshake(channel).then(function (_a) {\n    var version = _a.protocolVersion,\n        consumeRemainingBuffer = _a.consumeRemainingBuffer;\n    var chunker = new channel_1.Chunker(channel);\n    var dechunker = new channel_1.Dechunker();\n\n    var createProtocol = function (conn) {\n      return bolt_1.default.create({\n        version: version,\n        connection: conn,\n        channel: channel,\n        chunker: chunker,\n        dechunker: dechunker,\n        disableLosslessIntegers: config.disableLosslessIntegers,\n        useBigInt: config.useBigInt,\n        serversideRouting: serversideRouting,\n        server: conn.server,\n        log: log,\n        observer: {\n          onError: conn._handleFatalError.bind(conn),\n          onFailure: conn._resetOnFailure.bind(conn),\n          onProtocolError: conn._handleProtocolError.bind(conn),\n          onErrorApplyTransformation: function (error) {\n            return conn.handleAndTransformError(error, conn._address);\n          }\n        }\n      });\n    };\n\n    var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, createProtocol); // forward all pending bytes to the dechunker\n\n    consumeRemainingBuffer(function (buffer) {\n      return dechunker.write(buffer);\n    });\n    return connection;\n  }).catch(function (reason) {\n    return channel.close().then(function () {\n      throw reason;\n    });\n  });\n}\n\nexports.createChannelConnection = createChannelConnection;\n\nvar ChannelConnection =\n/** @class */\nfunction (_super) {\n  __extends(ChannelConnection, _super);\n  /**\n   * @constructor\n   * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n   * @param {ConnectionErrorHandler} errorHandler the error handler.\n   * @param {ServerAddress} address - the server address to connect to.\n   * @param {Logger} log - the configured logger.\n   * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n   * @param {Chunker} chunker the chunker\n   * @param protocolSupplier Bolt protocol supplier\n   */\n\n\n  function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n  protocolSupplier) {\n    if (disableLosslessIntegers === void 0) {\n      disableLosslessIntegers = false;\n    }\n\n    if (serversideRouting === void 0) {\n      serversideRouting = null;\n    }\n\n    var _this = _super.call(this, errorHandler) || this;\n\n    _this._id = idGenerator++;\n    _this._address = address;\n    _this._server = {\n      address: address.asHostPort()\n    };\n    _this.creationTimestamp = Date.now();\n    _this._disableLosslessIntegers = disableLosslessIntegers;\n    _this._ch = channel;\n    _this._chunker = chunker;\n    _this._log = log;\n    _this._serversideRouting = serversideRouting; // connection from the database, returned in response for HELLO message and might not be available\n\n    _this._dbConnectionId = null; // bolt protocol is initially not initialized\n\n    /**\n     * @private\n     * @type {BoltProtocol}\n     */\n\n    _this._protocol = protocolSupplier(_this); // Set to true on fatal errors, to get this out of connection pool.\n\n    _this._isBroken = false;\n\n    if (_this._log.isDebugEnabled()) {\n      _this._log.debug(_this + \" created towards \" + address);\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(ChannelConnection.prototype, \"id\", {\n    get: function () {\n      return this._id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n    get: function () {\n      return this._dbConnectionId;\n    },\n    set: function (value) {\n      this._dbConnectionId = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Send initialization message.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n   */\n\n  ChannelConnection.prototype.connect = function (userAgent, authToken) {\n    return this._initialize(userAgent, authToken);\n  };\n  /**\n   * Perform protocol-specific initialization which includes authentication.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n   */\n\n\n  ChannelConnection.prototype._initialize = function (userAgent, authToken) {\n    var _this = this;\n\n    var self = this;\n    return new Promise(function (resolve, reject) {\n      _this._protocol.initialize({\n        userAgent: userAgent,\n        authToken: authToken,\n        onError: function (err) {\n          return reject(err);\n        },\n        onComplete: function (metadata) {\n          if (metadata) {\n            // read server version from the response metadata, if it is available\n            var serverVersion = metadata.server;\n\n            if (!_this.version || serverVersion) {\n              _this.version = serverVersion;\n            } // read database connection id from the response metadata, if it is available\n\n\n            var dbConnectionId = metadata.connection_id;\n\n            if (!_this.databaseId) {\n              _this.databaseId = dbConnectionId;\n            }\n          }\n\n          resolve(self);\n        }\n      });\n    });\n  };\n  /**\n   * Get the Bolt protocol for the connection.\n   * @return {BoltProtocol} the protocol.\n   */\n\n\n  ChannelConnection.prototype.protocol = function () {\n    return this._protocol;\n  };\n\n  Object.defineProperty(ChannelConnection.prototype, \"address\", {\n    get: function () {\n      return this._address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"version\", {\n    /**\n     * Get the version of the connected server.\n     * Available only after initialization\n     *\n     * @returns {ServerVersion} version\n     */\n    get: function () {\n      return this._server.version;\n    },\n    set: function (value) {\n      this._server.version = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"server\", {\n    get: function () {\n      return this._server;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * \"Fatal\" means the connection is dead. Only call this if something\n   * happens that cannot be recovered from. This will lead to all subscribers\n   * failing, and the connection getting ejected from the session pool.\n   *\n   * @param error an error object, forwarded to all current and future subscribers\n   */\n\n  ChannelConnection.prototype._handleFatalError = function (error) {\n    this._isBroken = true;\n    this._error = this.handleAndTransformError(error, this._address);\n\n    if (this._log.isErrorEnabled()) {\n      this._log.error(this + \" experienced a fatal error \" + neo4j_driver_core_1.json.stringify(this._error));\n    }\n\n    this._protocol.notifyFatalError(this._error);\n  };\n  /**\n   * This method still here because it's used by the {@link PooledConnectionProvider}\n   *\n   * @param {any} observer\n   */\n\n\n  ChannelConnection.prototype._queueObserver = function (observer) {\n    return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n  };\n\n  ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n    return this._protocol.hasOngoingObservableRequests();\n  };\n  /**\n   * Send a RESET-message to the database. Message is immediately flushed to the network.\n   * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n   */\n\n\n  ChannelConnection.prototype.resetAndFlush = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this._protocol.reset({\n        onError: function (error) {\n          if (_this._isBroken) {\n            // handling a fatal error, no need to raise a protocol violation\n            reject(error);\n          } else {\n            var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n\n            reject(neo4jError);\n          }\n        },\n        onComplete: function () {\n          resolve();\n        }\n      });\n    });\n  };\n\n  ChannelConnection.prototype._resetOnFailure = function () {\n    var _this = this;\n\n    this._protocol.reset({\n      onError: function () {\n        _this._protocol.resetFailure();\n      },\n      onComplete: function () {\n        _this._protocol.resetFailure();\n      }\n    });\n  };\n  /*\n   * Pop next pending observer form the list of observers and make it current observer.\n   * @protected\n   */\n\n\n  ChannelConnection.prototype._updateCurrentObserver = function () {\n    this._protocol.updateCurrentObserver();\n  };\n  /** Check if this connection is in working condition */\n\n\n  ChannelConnection.prototype.isOpen = function () {\n    return !this._isBroken && this._ch._open;\n  };\n  /**\n   * Call close on the channel.\n   * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n   */\n\n\n  ChannelConnection.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(this + \" closing\");\n            }\n\n            if (this._protocol && this.isOpen()) {\n              // protocol has been initialized and this connection is healthy\n              // notify the database about the upcoming close of the connection\n              this._protocol.prepareToClose();\n            }\n\n            return [4\n            /*yield*/\n            , this._ch.close()];\n\n          case 1:\n            _a.sent();\n\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(this + \" closed\");\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChannelConnection.prototype.toString = function () {\n    return \"Connection [\" + this.id + \"][\" + (this.databaseId || '') + \"]\";\n  };\n\n  ChannelConnection.prototype._handleProtocolError = function (message) {\n    this._protocol.resetFailure();\n\n    this._updateCurrentObserver();\n\n    var error = neo4j_driver_core_1.newError(message, PROTOCOL_ERROR);\n\n    this._handleFatalError(error);\n\n    return error;\n  };\n\n  return ChannelConnection;\n}(connection_1.default);\n\nexports.default = ChannelConnection;","map":{"version":3,"sources":["/Users/ericyangchen/Downloads/Ont/frontend/node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","__importDefault","mod","__esModule","defineProperty","exports","createChannelConnection","channel_1","require","neo4j_driver_core_1","connection_1","bolt_1","PROTOCOL_ERROR","error","idGenerator","address","config","errorHandler","log","serversideRouting","createChannel","channelConfig","Channel","ChannelConfig","errorCode","channel","default","handshake","_a","version","protocolVersion","consumeRemainingBuffer","chunker","Chunker","dechunker","Dechunker","createProtocol","conn","connection","disableLosslessIntegers","useBigInt","server","observer","onError","_handleFatalError","bind","onFailure","_resetOnFailure","onProtocolError","_handleProtocolError","onErrorApplyTransformation","handleAndTransformError","_address","ChannelConnection","buffer","write","catch","reason","close","_super","protocolSupplier","_this","_id","_server","asHostPort","creationTimestamp","Date","now","_disableLosslessIntegers","_ch","_chunker","_log","_serversideRouting","_dbConnectionId","_protocol","_isBroken","isDebugEnabled","debug","get","enumerable","configurable","set","connect","userAgent","authToken","_initialize","self","initialize","err","onComplete","metadata","serverVersion","dbConnectionId","connection_id","databaseId","protocol","_error","isErrorEnabled","json","stringify","notifyFatalError","_queueObserver","queueObserverIfProtocolIsNotBroken","hasOngoingObservableRequests","resetAndFlush","reset","neo4jError","resetFailure","_updateCurrentObserver","updateCurrentObserver","isOpen","_open","prepareToClose","toString","id","message","newError"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChannelConnection = void 0;\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar connection_1 = __importDefault(require(\"./connection\"));\nvar bolt_1 = __importDefault(require(\"../bolt\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, serversideRouting, createChannel) {\n    if (serversideRouting === void 0) { serversideRouting = null; }\n    if (createChannel === void 0) { createChannel = function (channelConfig) { return new channel_1.Channel(channelConfig); }; }\n    var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode());\n    var channel = createChannel(channelConfig);\n    return bolt_1.default.handshake(channel)\n        .then(function (_a) {\n        var version = _a.protocolVersion, consumeRemainingBuffer = _a.consumeRemainingBuffer;\n        var chunker = new channel_1.Chunker(channel);\n        var dechunker = new channel_1.Dechunker();\n        var createProtocol = function (conn) {\n            return bolt_1.default.create({\n                version: version,\n                connection: conn,\n                channel: channel,\n                chunker: chunker,\n                dechunker: dechunker,\n                disableLosslessIntegers: config.disableLosslessIntegers,\n                useBigInt: config.useBigInt,\n                serversideRouting: serversideRouting,\n                server: conn.server,\n                log: log,\n                observer: {\n                    onError: conn._handleFatalError.bind(conn),\n                    onFailure: conn._resetOnFailure.bind(conn),\n                    onProtocolError: conn._handleProtocolError.bind(conn),\n                    onErrorApplyTransformation: function (error) {\n                        return conn.handleAndTransformError(error, conn._address);\n                    }\n                }\n            });\n        };\n        var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, createProtocol);\n        // forward all pending bytes to the dechunker\n        consumeRemainingBuffer(function (buffer) { return dechunker.write(buffer); });\n        return connection;\n    })\n        .catch(function (reason) {\n        return channel.close().then(function () {\n            throw reason;\n        });\n    });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */ (function (_super) {\n    __extends(ChannelConnection, _super);\n    /**\n     * @constructor\n     * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n     * @param {ConnectionErrorHandler} errorHandler the error handler.\n     * @param {ServerAddress} address - the server address to connect to.\n     * @param {Logger} log - the configured logger.\n     * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {Chunker} chunker the chunker\n     * @param protocolSupplier Bolt protocol supplier\n     */\n    function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n    protocolSupplier) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (serversideRouting === void 0) { serversideRouting = null; }\n        var _this = _super.call(this, errorHandler) || this;\n        _this._id = idGenerator++;\n        _this._address = address;\n        _this._server = { address: address.asHostPort() };\n        _this.creationTimestamp = Date.now();\n        _this._disableLosslessIntegers = disableLosslessIntegers;\n        _this._ch = channel;\n        _this._chunker = chunker;\n        _this._log = log;\n        _this._serversideRouting = serversideRouting;\n        // connection from the database, returned in response for HELLO message and might not be available\n        _this._dbConnectionId = null;\n        // bolt protocol is initially not initialized\n        /**\n         * @private\n         * @type {BoltProtocol}\n         */\n        _this._protocol = protocolSupplier(_this);\n        // Set to true on fatal errors, to get this out of connection pool.\n        _this._isBroken = false;\n        if (_this._log.isDebugEnabled()) {\n            _this._log.debug(_this + \" created towards \" + address);\n        }\n        return _this;\n    }\n    Object.defineProperty(ChannelConnection.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n        get: function () {\n            return this._dbConnectionId;\n        },\n        set: function (value) {\n            this._dbConnectionId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send initialization message.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype.connect = function (userAgent, authToken) {\n        return this._initialize(userAgent, authToken);\n    };\n    /**\n     * Perform protocol-specific initialization which includes authentication.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype._initialize = function (userAgent, authToken) {\n        var _this = this;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.initialize({\n                userAgent: userAgent,\n                authToken: authToken,\n                onError: function (err) { return reject(err); },\n                onComplete: function (metadata) {\n                    if (metadata) {\n                        // read server version from the response metadata, if it is available\n                        var serverVersion = metadata.server;\n                        if (!_this.version || serverVersion) {\n                            _this.version = serverVersion;\n                        }\n                        // read database connection id from the response metadata, if it is available\n                        var dbConnectionId = metadata.connection_id;\n                        if (!_this.databaseId) {\n                            _this.databaseId = dbConnectionId;\n                        }\n                    }\n                    resolve(self);\n                }\n            });\n        });\n    };\n    /**\n     * Get the Bolt protocol for the connection.\n     * @return {BoltProtocol} the protocol.\n     */\n    ChannelConnection.prototype.protocol = function () {\n        return this._protocol;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"address\", {\n        get: function () {\n            return this._address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"version\", {\n        /**\n         * Get the version of the connected server.\n         * Available only after initialization\n         *\n         * @returns {ServerVersion} version\n         */\n        get: function () {\n            return this._server.version;\n        },\n        set: function (value) {\n            this._server.version = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"server\", {\n        get: function () {\n            return this._server;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * \"Fatal\" means the connection is dead. Only call this if something\n     * happens that cannot be recovered from. This will lead to all subscribers\n     * failing, and the connection getting ejected from the session pool.\n     *\n     * @param error an error object, forwarded to all current and future subscribers\n     */\n    ChannelConnection.prototype._handleFatalError = function (error) {\n        this._isBroken = true;\n        this._error = this.handleAndTransformError(error, this._address);\n        if (this._log.isErrorEnabled()) {\n            this._log.error(this + \" experienced a fatal error \" + neo4j_driver_core_1.json.stringify(this._error));\n        }\n        this._protocol.notifyFatalError(this._error);\n    };\n    /**\n     * This method still here because it's used by the {@link PooledConnectionProvider}\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._queueObserver = function (observer) {\n        return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n        return this._protocol.hasOngoingObservableRequests();\n    };\n    /**\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n     */\n    ChannelConnection.prototype.resetAndFlush = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.reset({\n                onError: function (error) {\n                    if (_this._isBroken) {\n                        // handling a fatal error, no need to raise a protocol violation\n                        reject(error);\n                    }\n                    else {\n                        var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n                        reject(neo4jError);\n                    }\n                },\n                onComplete: function () {\n                    resolve();\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype._resetOnFailure = function () {\n        var _this = this;\n        this._protocol.reset({\n            onError: function () {\n                _this._protocol.resetFailure();\n            },\n            onComplete: function () {\n                _this._protocol.resetFailure();\n            }\n        });\n    };\n    /*\n     * Pop next pending observer form the list of observers and make it current observer.\n     * @protected\n     */\n    ChannelConnection.prototype._updateCurrentObserver = function () {\n        this._protocol.updateCurrentObserver();\n    };\n    /** Check if this connection is in working condition */\n    ChannelConnection.prototype.isOpen = function () {\n        return !this._isBroken && this._ch._open;\n    };\n    /**\n     * Call close on the channel.\n     * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n     */\n    ChannelConnection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(this + \" closing\");\n                        }\n                        if (this._protocol && this.isOpen()) {\n                            // protocol has been initialized and this connection is healthy\n                            // notify the database about the upcoming close of the connection\n                            this._protocol.prepareToClose();\n                        }\n                        return [4 /*yield*/, this._ch.close()];\n                    case 1:\n                        _a.sent();\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(this + \" closed\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype.toString = function () {\n        return \"Connection [\" + this.id + \"][\" + (this.databaseId || '') + \"]\";\n    };\n    ChannelConnection.prototype._handleProtocolError = function (message) {\n        this._protocol.resetFailure();\n        this._updateCurrentObserver();\n        var error = neo4j_driver_core_1.newError(message, PROTOCOL_ERROR);\n        this._handleFatalError(error);\n        return error;\n    };\n    return ChannelConnection;\n}(connection_1.default));\nexports.default = ChannelConnection;\n"]},"metadata":{},"sourceType":"script"}