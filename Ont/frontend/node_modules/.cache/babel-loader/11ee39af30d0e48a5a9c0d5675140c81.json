{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar buf_1 = __importDefault(require(\"../../buf\"));\n\nvar HeapBuffer =\n/** @class */\nfunction (_super) {\n  __extends(HeapBuffer, _super);\n\n  function HeapBuffer(arg) {\n    var _this = this;\n\n    var buffer = arg instanceof ArrayBuffer ? arg : new ArrayBuffer(arg);\n    _this = _super.call(this, buffer.byteLength) || this;\n    _this._buffer = buffer;\n    _this._view = new DataView(_this._buffer);\n    return _this;\n  }\n\n  HeapBuffer.prototype.putUInt8 = function (position, val) {\n    this._view.setUint8(position, val);\n  };\n\n  HeapBuffer.prototype.getUInt8 = function (position) {\n    return this._view.getUint8(position);\n  };\n\n  HeapBuffer.prototype.putInt8 = function (position, val) {\n    this._view.setInt8(position, val);\n  };\n\n  HeapBuffer.prototype.getInt8 = function (position) {\n    return this._view.getInt8(position);\n  };\n\n  HeapBuffer.prototype.getFloat64 = function (position) {\n    return this._view.getFloat64(position);\n  };\n\n  HeapBuffer.prototype.putFloat64 = function (position, val) {\n    this._view.setFloat64(position, val);\n  };\n\n  HeapBuffer.prototype.getSlice = function (start, length) {\n    if (this._buffer.slice) {\n      return new HeapBuffer(this._buffer.slice(start, start + length));\n    } else {\n      // Some platforms (eg. phantomjs) don't support slice, so fall back to a copy\n      // We do this rather than return a SliceBuffer, because sliceBuffer cannot\n      // be passed to native network write ops etc - we need ArrayBuffer for that\n      var copy = new HeapBuffer(length);\n\n      for (var i = 0; i < length; i++) {\n        copy.putUInt8(i, this.getUInt8(i + start));\n      }\n\n      return copy;\n    }\n  };\n  /**\n   * Specific to HeapBuffer, this gets a DataView from the\n   * current position and of the specified length.\n   */\n\n\n  HeapBuffer.prototype.readView = function (length) {\n    return new DataView(this._buffer, this._updatePos(length), length);\n  };\n\n  return HeapBuffer;\n}(buf_1.default);\n\nexports.default = HeapBuffer;","map":{"version":3,"sources":["/Users/ericyangchen/Downloads/Ont/frontend/node_modules/neo4j-driver-bolt-connection/lib/channel/browser/browser-buf.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","buf_1","require","HeapBuffer","_super","arg","_this","buffer","ArrayBuffer","byteLength","_buffer","_view","DataView","putUInt8","position","val","setUint8","getUInt8","getUint8","putInt8","setInt8","getInt8","getFloat64","putFloat64","setFloat64","getSlice","start","length","slice","copy","i","readView","_updatePos","default"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar buf_1 = __importDefault(require(\"../../buf\"));\nvar HeapBuffer = /** @class */ (function (_super) {\n    __extends(HeapBuffer, _super);\n    function HeapBuffer(arg) {\n        var _this = this;\n        var buffer = arg instanceof ArrayBuffer ? arg : new ArrayBuffer(arg);\n        _this = _super.call(this, buffer.byteLength) || this;\n        _this._buffer = buffer;\n        _this._view = new DataView(_this._buffer);\n        return _this;\n    }\n    HeapBuffer.prototype.putUInt8 = function (position, val) {\n        this._view.setUint8(position, val);\n    };\n    HeapBuffer.prototype.getUInt8 = function (position) {\n        return this._view.getUint8(position);\n    };\n    HeapBuffer.prototype.putInt8 = function (position, val) {\n        this._view.setInt8(position, val);\n    };\n    HeapBuffer.prototype.getInt8 = function (position) {\n        return this._view.getInt8(position);\n    };\n    HeapBuffer.prototype.getFloat64 = function (position) {\n        return this._view.getFloat64(position);\n    };\n    HeapBuffer.prototype.putFloat64 = function (position, val) {\n        this._view.setFloat64(position, val);\n    };\n    HeapBuffer.prototype.getSlice = function (start, length) {\n        if (this._buffer.slice) {\n            return new HeapBuffer(this._buffer.slice(start, start + length));\n        }\n        else {\n            // Some platforms (eg. phantomjs) don't support slice, so fall back to a copy\n            // We do this rather than return a SliceBuffer, because sliceBuffer cannot\n            // be passed to native network write ops etc - we need ArrayBuffer for that\n            var copy = new HeapBuffer(length);\n            for (var i = 0; i < length; i++) {\n                copy.putUInt8(i, this.getUInt8(i + start));\n            }\n            return copy;\n        }\n    };\n    /**\n     * Specific to HeapBuffer, this gets a DataView from the\n     * current position and of the specified length.\n     */\n    HeapBuffer.prototype.readView = function (length) {\n        return new DataView(this._buffer, this._updatePos(length), length);\n    };\n    return HeapBuffer;\n}(buf_1.default));\nexports.default = HeapBuffer;\n"]},"metadata":{},"sourceType":"script"}